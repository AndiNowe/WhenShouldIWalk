[{"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Response.js":"1","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\App.js":"2","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\WalkList.js":"3","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\WalkForm.js":"4","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Form.js":"5","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Header.js":"6","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\reportWebVitals.js":"7","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\index.js":"8"},{"size":6590,"mtime":1613500113034,"results":"9","hashOfConfig":"10"},{"size":2020,"mtime":1613499227263,"results":"11","hashOfConfig":"10"},{"size":513,"mtime":1613418521260,"results":"12","hashOfConfig":"10"},{"size":1679,"mtime":1613499267384,"results":"13","hashOfConfig":"10"},{"size":1102,"mtime":1613498865848,"results":"14","hashOfConfig":"10"},{"size":380,"mtime":1613332612529,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1612212091438,"results":"16","hashOfConfig":"10"},{"size":591,"mtime":1613331420925,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gt44zt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Response.js",["36","37","38"],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\App.js",["39"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header.js\";\nimport { Route, Switch } from \"react-router-dom\";\nimport WalkForm from \"./Components/WalkForm.js\";\nimport WalkList from \"./Components/WalkList.js\";\nimport Form from \"./Components/Form.js\";\nimport Response from \"./Components/Response.js\";\n\nconst BASEURL = \"http://api.weatherapi.com/v1\";\nconst API_KEY = \"05d2e662aca243ef99c223826210402\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [walks, setWalks] = useState([]);\n\n  function addWalk(walk) {\n    let newWalkArray = [...walks, walk];\n    setWalks(newWalkArray);\n  }\n\n  const getWeather = async (location) => {\n    console.log(\"location -->\", location);\n    let url = `${BASEURL}/forecast.json?key=${API_KEY}&q=${location}&days=1`;\n    // sets the url for the query\n    setForecast(null);\n\n    try {\n      console.log(url);\n      let response = await fetch(url);\n\n      // call fetch, wait for return\n      if (response.ok) {\n        console.log(\"Response ok\");\n        // server received and understood the request\n        let data = await response.json();\n        setForecast(data); //update state\n      } else {\n        console.log(\"Run into an error\");\n        setError(`Server error: ${response.status} ${response.statusText}`);\n      }\n    } catch (err) {\n      console.log(\"Ended up in catch\");\n      setError(`Network error: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        {/* Using 'exact' else route will match everything */}\n        <Route path=\"/\" exact>\n          <Form onSubmit={(location) => getWeather(location)} />\n          {forecast && <Response forecast={forecast} />}\n          <br></br>\n        </Route>\n        <Route path=\"/mywalks\">\n          <WalkForm onSubmit={(w) => addWalk(w)} />\n          {walks && <WalkList walks={walks} />}\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n",["40","41"],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\WalkList.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\WalkForm.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Form.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\Components\\Header.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\reportWebVitals.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\src\\index.js",[],{"ruleId":"42","severity":1,"message":"43","line":85,"column":34,"nodeType":"44","messageId":"45","endLine":85,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":86,"column":7,"nodeType":"48","messageId":"49","endLine":103,"endColumn":8},{"ruleId":"50","severity":1,"message":"51","line":163,"column":7,"nodeType":"52","messageId":"53","endLine":163,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":14,"column":10,"nodeType":"52","messageId":"53","endLine":14,"endColumn":15},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'optimumTimeMessage' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-global-assign","no-unsafe-negation"]