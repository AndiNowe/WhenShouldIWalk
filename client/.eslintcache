[{"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\index.js":"1","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\App.js":"2","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\reportWebVitals.js":"3","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Header.js":"4","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\WalkForm.js":"5","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\WalkList.js":"6","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Form.js":"7","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Response.js":"8"},{"size":593,"mtime":1613587961696,"results":"9","hashOfConfig":"10"},{"size":3252,"mtime":1613601002628,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1613587962439,"results":"12","hashOfConfig":"10"},{"size":380,"mtime":1613332612529,"results":"13","hashOfConfig":"10"},{"size":1656,"mtime":1613601002769,"results":"14","hashOfConfig":"10"},{"size":547,"mtime":1613673063541,"results":"15","hashOfConfig":"10"},{"size":1098,"mtime":1613599506917,"results":"16","hashOfConfig":"10"},{"size":6801,"mtime":1613674634211,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"p3gxau",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\index.js",[],["38","39"],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\App.js",["40"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header.js\";\nimport { Route, Switch } from \"react-router-dom\";\nimport WalkForm from \"./Components/WalkForm.js\";\nimport WalkList from \"./Components/WalkList.js\";\nimport Form from \"./Components/Form.js\";\nimport Response from \"./Components/Response.js\";\n\nconst BASEURL = \"http://api.weatherapi.com/v1\";\nconst API_KEY = \"05d2e662aca243ef99c223826210402\";\n\nfunction App() {\n  let [error, setError] = useState(null);\n  let [forecast, setForecast] = useState(null);\n  let [walks, setWalks] = useState([]);\n\n  useEffect(() => {\n    getWalks();\n  }, []);\n\n  const getWalks = () => {\n    fetch(\"/walks\")\n      .then(result => result.json())\n      .then(walks => {\n        setWalks(walks);\n      })\n      //  console.log(response, \"Response!\")\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  console.log(walks, \"This is walks!\");\n\n  function deleteWalk(id) {\n    console.log(\"Delete walk console log\" + id);\n    let options = {\n      method: \"DELETE\",\n      body: JSON.stringify(walks)\n    };\n\n    fetch(`/walks/${id}`, options)\n      .then(result => result.json())\n      .then(walks => {\n        setWalks(walks);\n      })\n      .catch(err => {\n        console.log(\"error!\", err.message);\n      });\n  }\n\n  function addWalk(title, date, time) {\n    let newWalk = { title, date, time };\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      //this tells the server in what format to expect the data\n      body: JSON.stringify(newWalk) //object needs to converted to json (with stringify)\n    };\n    fetch(\"/walks\", options)\n      .then(result => result.json())\n      .then(walks => {\n        setWalks(walks);\n      })\n      .catch(err => {\n        console.log(\"error!\", err.message);\n      });\n  }\n\n  const getWeather = async location => {\n    console.log(\"location -->\", location);\n    let url = `${BASEURL}/forecast.json?key=${API_KEY}&q=${location}&days=1`;\n    // sets the url for the query\n    setForecast(null);\n\n    try {\n      console.log(url);\n      let response = await fetch(url);\n\n      // call fetch, wait for return\n      if (response.ok) {\n        console.log(\"Response ok\");\n        // server received and understood the request\n        let data = await response.json();\n        setForecast(data); //update state\n      } else {\n        console.log(\"Run into an error\");\n        setError(`Server error: ${response.status} ${response.statusText}`);\n      }\n    } catch (err) {\n      console.log(\"Ended up in catch\");\n      setError(`Network error: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        {/* Using 'exact' else route will match everything */}\n        <Route path=\"/\" exact>\n          <Form onSubmit={location => getWeather(location)} />\n          {forecast && <Response forecast={forecast} />}\n          <br></br>\n        </Route>\n        <Route path=\"/mywalks\">\n          <WalkForm\n            onSubmit={(title, date, time) => addWalk(title, date, time)}\n          />\n          <WalkList walks={walks} onDelete={id => deleteWalk(id)} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\reportWebVitals.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Header.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\WalkForm.js",["41"],"import React, { useState } from \"react\";\r\n\r\nfunction WalkForm(props) {\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    let { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"date\":\r\n        setDate(value);\r\n        break;\r\n      case \"time\":\r\n        setTime(value);\r\n        break;\r\n      case \"title\":\r\n        setTitle(value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // let walk = { date: date, time: time, title: title };\r\n    props.onSubmit(title, date, time);\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n    setTitle(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"WalkForm\">\r\n      <h2 id=\"EnterWalk\"> Enter a walk</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Title\r\n          <input\r\n            id=\"title\"\r\n            label=\"title\"\r\n            type=\"textarea\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br></br>\r\n        <label>\r\n          Date\r\n          <input\r\n            label=\"date\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={date}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br></br>\r\n        <label>\r\n          Time\r\n          <input type=\"time\" name=\"time\" value={time} onChange={handleChange} />\r\n        </label>\r\n\r\n        <button>Add walk</button>\r\n\r\n        {/* display:\r\n                Date at *time */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalkForm;\r\n","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\WalkList.js",["42"],"import React from \"react\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nfunction WalkList(props) {\r\n\r\n  return (\r\n    \r\n      \r\n    <div className=\"WalkList\">\r\n      <h2>My walks</h2>\r\n\r\n      <ul>\r\n        {props.walks.map(w => (\r\n          <li key={w.id} className=\"list-items\">\r\n            {w.title} on {w.date} at {w.time}\r\n            <button id=\"deleteButton\" onClick={e => props.onDelete(w.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default WalkList;\r\n","C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Form.js",[],"C:\\Users\\maisi\\Desktop\\Coding projects\\codeop\\WhenShouldIWalk\\client\\src\\Components\\Response.js",["43","44","45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":14,"column":8,"nodeType":"53","messageId":"54","endLine":14,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":11,"column":5,"nodeType":"57","messageId":"58","endLine":21,"endColumn":6},{"ruleId":"51","severity":1,"message":"59","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":84,"column":34,"nodeType":"62","messageId":"63","endLine":84,"endColumn":42},{"ruleId":"55","severity":1,"message":"56","line":85,"column":7,"nodeType":"57","messageId":"58","endLine":102,"endColumn":8},{"ruleId":"51","severity":1,"message":"64","line":169,"column":7,"nodeType":"53","messageId":"54","endLine":169,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":187,"column":37,"nodeType":"67","endLine":187,"endColumn":54},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Table' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'optimumTimeMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]